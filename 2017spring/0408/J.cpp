#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;

const int N = 1010;
typedef long long LL;
//int prime[N], cnt;
int ans = 388, a[N] = 
{
0,
3,
5,
7,
17,
31,
73,
107,
127,
257,
313,
443,
1193,
1453,
1571,
1619,
1787,
1831,
1879,
4889,
5113,
5189,
5557,
5869,
5981,
6211,
6827,
7607,
7759,
7919,
8191,
17377,
18097,
18289,
19433,
19609,
19801,
21157,
22541,
22669,
22861,
23581,
24029,
25747,
25939,
27179,
27803,
28123,
28219,
28807,
29671,
30391,
31183,
31727,
65537,
70289,
71633,
72817,
74377,
75721,
77801,
77849,
79193,
81017,
83269,
83653,
85093,
85733,
86293,
86677,
88117,
92461,
95581,
96221,
97213,
98563,
98947,
100291,
101027,
104147,
108587,
112603,
114043,
115783,
116423,
117671,
119447,
122231,
123791,
123983,
125231,
126703,
128351,
131071,
262657,
268993,
269761,
274529,
277217,
278497,
280337,
281233,
282001,
284881,
286673,
287281,
288049,
290737,
293617,
295433,
296201,
296713,
297097,
303049,
304937,
307817,
309481,
312601,
314777,
315481,
320057,
321721,
324217,
327673,
331141,
334021,
335813,
337189,
342757,
346261,
348053,
348757,
352309,
354997,
356981,
360461,
360973,
363149,
363917,
364621,
367309,
368077,
369197,
370477,
372653,
373357,
375533,
379549,
381533,
382813,
385597,
388541,
397379,
400067,
401347,
406883,
410899,
413587,
413779,
427787,
428683,
431947,
440171,
444187,
446363,
447067,
449243,
450011,
455291,
456571,
458747,
459271,
460039,
462727,
475159,
477847,
486071,
486839,
492047,
493711,
499151,
499663,
505711,
511391,
514271,
514783,
523007,
524287,
1053953,
1055489,
1060481,
1066049,
1071937,
1072961,
1077697,
1089313,
1090721,
1092257,
1096609,
1097633,
1101409,
1104737,
1122449,
1126033,
1134929,
1139921,
1146833,
1159601,
1165937,
1177073,
1178609,
1183241,
1194889,
1199689,
1201481,
1208777,
1212361,
1213481,
1215017,
1217833,
1220393,
1220777,
1225129,
1242601,
1254553,
1273561,
1276889,
1287353,
1298809,
1299833,
1311749,
1318661,
1329733,
1347877,
1348901,
1355429,
1356197,
1380629,
1385621,
1411637,
1414453,
1415989,
1420981,
1448717,
1454477,
1458253,
1459277,
1478189,
1478957,
1482541,
1488301,
1500397,
1519261,
1522589,
1524829,
1527389,
1528157,
1540157,
1543741,
1544509,
1547069,
1549501,
1551037,
1556413,
1568509,
1589123,
1601219,
1608227,
1613987,
1625699,
1626467,
1630051,
1635811,
1649299,
1655891,
1662803,
1666771,
1672243,
1679539,
1687667,
1699571,
1700339,
1704971,
1712267,
1715851,
1716619,
1735627,
1741099,
1743659,
1780379,
1785947,
1791323,
1798619,
1803323,
1809211,
1823099,
1835003,
1847687,
1851271,
1851463,
1865159,
1875751,
1877159,
1881511,
1883047,
1893607,
1915799,
1920599,
1926359,
1932247,
1938743,
1975439,
1987919,
2004271,
2006831,
2014127,
2016367,
2018927,
2026223,
2031599,
2037023,
2049119,
2060767,
2067007,
2072383,
2084479,
2085247,
2087807,
2090239,
2092799,
4218113,
4224769,
4229249,
4259713,
4268609,
4285249,
4308673,
4332577,
4347169,
4352801,
4355873,
4376993,
4390817,
4404833,
4406881,
4439777,
4454369,
4467217,
4470289,
4475153,
4494481,
4505233,
4506001,
4537937,
4554577,
4573649,
4576721,
4603441,
4612913,
4627633,
4629169,
4636337,
4653169,
4663921,
4671857,
4701937,
4711409,
4716529,
4723721,
4740361,
4760201,
4773257,
4776841,
4784009,
4794953,
4800073,
4800841,
4808009,
4838857,
4847561,
4875049,
4882217,
4898473,
4942697,
4948201,
4966889,
4969961,
4985881,
4997401
};
char b[500][40];

/*
bool no[N];
void check(int x)
{
	int pos = 0;
	for (int i = 31; i >= 0; --i)
		if (x >> i & 1) {
			pos = i;
			break;
		}
	for (int i = pos, j = 0; i > j; --i, ++j) {
		if (((x >> i) & 1) != ((x >> j) & 1)) return;
	}
	a[++ans] = x;
	for (int i = pos; i >= 0; --i) b[ans][pos - i] = (x >> i & 1) + '0';
}
void getprime()
{
	for (int i = 2; i <= 5000000; ++i)
		if (!no[i]) {
			prime[++cnt] = i;
			for (LL j = (LL)i * i; j <= 5000000; j += i)
				no[j] = 1;
		}
//	printf("cnt = %d\n", cnt);
	for (int i = 1; i <= cnt; ++i)
		check(prime[i]);
}
*/
char s[40];
int main()
{
//	freopen("J.out","w",stdout);
//	getprime();
	for (int i = 1; i <= ans; ++i) {
		int pos = 0, x = a[i];
		for (int i = 31; i >= 0; --i)
			if (x >> i & 1) {
				pos = i;
				break;
			}
		for (int j = pos; j >= 0; --j) b[i][pos - j] = (x >> j & 1) + '0';
	}
	while(gets(s)) {
		int x = 0, l = strlen(s);
		for (int i = 0; i < l; ++i)
			x = x << 1 | (s[i] - '0');
		int y = lower_bound(a + 1, a + ans + 1, x) - a;
		printf("%s\n", b[y]);
	}
	return 0;
}
