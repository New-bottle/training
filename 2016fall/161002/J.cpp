#include <algorithm>
#include <iostream>
#include <vector>



#include <map>

struct Emtry {
	std::vector<int> a, b;
};

std::map<std::string, Emtry> map = {
{ "<<<<<",{ {1,3,5,7,2,4,6,8,},{5,4,1,2,3,6,7,8,},},},
{ "=<<<<",{ {1,3,5,7,2,4,6,8,},{5,3,1,2,4,6,7,8,},},},
{ "><<<<",{ {1,3,5,7,2,4,6,8,},{3,2,1,4,5,6,7,8,},},},
{ "<=<<<",{ {1,2,5,4,7,3,6,8,},{5,2,3,1,4,6,7,8,},},},
{ "==<<<",{ {1,2,5,4,7,3,6,8,},{4,2,3,1,5,6,7,8,},},},
{ ">=<<<",{ {1,2,3,5,7,4,6,8,},{2,1,3,4,5,6,7,8,},},},
{ "<><<<",{ {1,2,4,3,7,6,5,8,},{4,2,3,1,5,6,7,8,},},},
{ "=><<<",{ {1,2,3,5,4,7,6,8,},{1,2,3,4,6,7,5,8,},},},
{ ">><<<",{ {1,2,3,4,5,7,6,8,},{1,2,3,4,5,6,7,8,},},},
{ "<<=<<",{ {1,2,4,6,3,5,7,8,},{4,2,1,3,5,6,7,8,},},},
{ "=<=<<",{ {1,2,4,6,3,5,7,8,},{3,2,1,4,5,6,7,8,},},},
{ "><=<<",{ {1,2,4,7,3,5,6,8,},{3,2,1,4,5,6,7,8,},},},
{ "<==<<",{ {1,2,3,5,4,7,6,8,},{3,2,1,4,5,6,7,8,},},},
{ "===<<",{ {1,2,3,6,4,7,5,8,},{3,2,1,4,5,6,7,8,},},},
{ ">==<<",{ {1,2,3,4,7,5,6,8,},{2,1,3,4,5,6,7,8,},},},
{ "<>=<<",{ {1,2,4,3,6,7,5,8,},{1,2,3,6,7,4,5,8,},},},
{ "=>=<<",{ {1,2,4,3,6,7,5,8,},{1,2,3,5,7,4,6,8,},},},
{ ">>=<<",{ {1,2,4,6,3,7,5,8,},{2,4,1,3,5,6,7,8,},},},
{ "<<><<",{ {1,2,3,6,4,5,7,8,},{3,2,1,4,5,6,7,8,},},},
{ "=<><<",{ {1,2,3,7,4,5,6,8,},{3,2,1,4,5,6,7,8,},},},
{ "><><<",{ {1,4,5,3,6,7,2,8,},{4,3,2,1,5,6,7,8,},},},
{ "<=><<",{ {1,2,4,3,6,7,5,8,},{3,2,5,1,4,6,7,8,},},},
{ "==><<",{ {1,2,6,3,7,4,5,8,},{3,2,5,1,4,6,7,8,},},},
{ ">=><<",{ {1,2,7,3,6,4,5,8,},{3,2,5,1,4,6,7,8,},},},
{ "<>><<",{ {1,3,2,5,4,7,6,8,},{4,6,3,5,1,2,7,8,},},},
{ "=>><<",{ {2,3,5,1,6,7,4,8,},{2,4,6,1,3,5,7,8,},},},
{ ">>><<",{ {2,4,5,1,6,7,3,8,},{2,4,6,1,3,5,7,8,},},},
{ "<<<=<",{ {1,3,5,7,2,4,6,8,},{1,2,7,6,3,4,5,8,},},},
{ "=<<=<",{ {1,3,5,7,2,4,6,8,},{1,2,4,7,5,6,3,8,},},},
{ "><<=<",{ {1,3,5,7,2,4,6,8,},{1,2,3,5,4,7,6,8,},},},
{ "<=<=<",{ {1,2,4,7,3,6,5,8,},{1,2,4,7,5,6,3,8,},},},
{ "==<=<",{ {1,2,4,7,3,6,5,8,},{1,2,3,7,5,6,4,8,},},},
{ ">=<=<",{ {1,2,3,5,7,4,6,8,},{1,2,3,4,6,5,7,8,},},},
{ "<><=<",{ {1,2,3,7,6,5,4,8,},{1,6,3,4,5,7,2,8,},},},
{ "=><=<",{ {1,2,3,5,4,7,6,8,},{1,2,3,6,4,5,7,8,},},},
{ ">><=<",{ {1,2,3,5,4,7,6,8,},{1,2,3,5,4,6,7,8,},},},
{ "<<==<",{ {1,2,3,5,7,4,6,8,},{1,2,3,5,7,6,4,8,},},},
{ "=<==<",{ {1,2,3,5,7,4,6,8,},{1,2,3,4,7,6,5,8,},},},
{ "><==<",{ {1,2,3,6,7,4,5,8,},{1,2,3,4,7,6,5,8,},},},
{ "<===<",{ {1,2,3,5,4,7,6,8,},{1,2,3,6,5,4,7,8,},},},
{ "====<",{ {1,2,3,6,4,7,5,8,},{1,2,3,6,5,4,7,8,},},},
{ ">===<",{ {1,2,3,4,6,7,5,8,},{1,2,3,4,5,7,6,8,},},},
{ "<>==<",{ {1,2,4,5,3,7,6,8,},{1,2,5,6,3,4,7,8,},},},
{ "=>==<",{ {1,2,4,5,3,7,6,8,},{1,2,4,6,3,5,7,8,},},},
{ ">>==<",{ {1,2,4,6,3,7,5,8,},{1,2,4,6,3,5,7,8,},},},
{ "<<>=<",{ {1,2,3,4,6,7,5,8,},{3,2,1,4,5,6,7,8,},},},
{ "=<>=<",{ {1,2,3,5,6,7,4,8,},{3,2,1,4,5,6,7,8,},},},
{ "><>=<",{ {1,2,4,5,6,7,3,8,},{3,2,1,4,5,6,7,8,},},},
{ "<=>=<",{ {1,2,4,3,6,7,5,8,},{1,2,5,4,7,3,6,8,},},},
{ "==>=<",{ {1,2,4,5,6,7,3,8,},{3,4,1,2,5,6,7,8,},},},
{ ">=>=<",{ {1,2,4,5,6,7,3,8,},{2,4,1,3,5,6,7,8,},},},
{ "<>>=<",{ {1,2,4,7,6,5,3,8,},{5,6,3,4,1,2,7,8,},},},
{ "=>>=<",{ {1,4,7,5,6,3,2,8,},{1,5,7,4,6,2,3,8,},},},
{ ">>>=<",{ {1,5,6,7,4,3,2,8,},{4,6,3,5,1,2,7,8,},},},
{ "<<<><",{ {2,4,6,1,3,5,7,8,},{1,2,7,4,5,6,3,8,},},},
{ "=<<><",{ {2,4,6,1,3,5,7,8,},{1,2,6,4,5,7,3,8,},},},
{ "><<><",{ {2,4,6,1,3,5,7,8,},{1,2,4,3,5,7,6,8,},},},
{ "<=<><",{ {2,5,4,1,3,6,7,8,},{1,2,7,4,5,6,3,8,},},},
{ "==<><",{ {2,5,4,1,3,6,7,8,},{1,2,6,4,5,7,3,8,},},},
{ ">=<><",{ {2,4,1,3,5,6,7,8,},{1,2,3,5,4,6,7,8,},},},
{ "<><><",{ {4,3,2,1,5,6,7,8,},{1,2,7,4,5,6,3,8,},},},
{ "=><><",{ {4,3,2,1,5,6,7,8,},{1,2,6,4,5,7,3,8,},},},
{ ">><><",{ {4,2,1,3,5,6,7,8,},{1,2,3,5,4,6,7,8,},},},
{ "<<=><",{ {1,2,3,5,7,4,6,8,},{1,2,5,4,6,3,7,8,},},},
{ "=<=><",{ {1,2,3,6,7,4,5,8,},{1,2,5,4,6,3,7,8,},},},
{ "><=><",{ {1,2,4,5,7,3,6,8,},{1,2,4,3,5,7,6,8,},},},
{ "<==><",{ {1,2,3,5,7,6,4,8,},{1,2,6,4,5,3,7,8,},},},
{ "===><",{ {1,2,3,6,7,5,4,8,},{1,2,6,4,5,3,7,8,},},},
{ ">==><",{ {1,2,3,4,6,7,5,8,},{1,2,3,5,4,6,7,8,},},},
{ "<>=><",{ {5,3,2,1,4,6,7,8,},{1,4,7,2,5,6,3,8,},},},
{ "=>=><",{ {5,3,2,1,4,6,7,8,},{1,2,7,4,6,3,5,8,},},},
{ ">>=><",{ {5,3,1,2,4,6,7,8,},{1,2,4,6,3,5,7,8,},},},
{ "<<>><",{ {1,2,3,4,6,7,5,8,},{1,2,3,6,5,4,7,8,},},},
{ "=<>><",{ {1,2,3,5,6,7,4,8,},{1,2,3,6,5,4,7,8,},},},
{ "><>><",{ {1,2,4,5,6,7,3,8,},{1,2,3,5,4,7,6,8,},},},
{ "<=>><",{ {1,2,4,6,7,5,3,8,},{1,2,7,4,6,3,5,8,},},},
{ "==>><",{ {1,2,4,5,6,7,3,8,},{1,2,5,6,3,4,7,8,},},},
{ ">=>><",{ {1,2,4,5,6,7,3,8,},{1,2,4,6,3,5,7,8,},},},
{ "<>>><",{ {5,3,2,1,4,6,7,8,},{1,6,7,4,5,2,3,8,},},},
{ "=>>><",{ {6,5,4,1,2,3,7,8,},{1,6,7,4,5,2,3,8,},},},
{ ">>>><",{ {6,5,4,1,2,3,7,8,},{1,5,7,4,6,2,3,8,},},},
{ "<<<<=",{ {1,3,5,7,2,4,6,8,},{6,3,1,2,4,5,7,8,},},},
{ "=<<<=",{ {1,3,6,7,2,4,5,8,},{6,3,1,2,4,5,7,8,},},},
{ "><<<=",{ {1,4,6,7,2,3,5,8,},{6,3,1,2,4,5,7,8,},},},
{ "<=<<=",{ {1,2,4,7,6,3,5,8,},{5,4,1,2,3,6,7,8,},},},
{ "==<<=",{ {1,2,3,5,7,4,6,8,},{4,1,2,3,5,6,7,8,},},},
{ ">=<<=",{ {1,2,3,6,7,4,5,8,},{4,1,2,3,5,6,7,8,},},},
{ "<><<=",{ {1,2,3,5,4,7,6,8,},{1,2,3,5,6,7,4,8,},},},
{ "=><<=",{ {1,2,3,6,4,7,5,8,},{1,2,3,5,6,7,4,8,},},},
{ ">><<=",{ {1,2,3,4,7,6,5,8,},{2,1,3,4,5,6,7,8,},},},
{ "<<=<=",{ {1,2,4,6,3,5,7,8,},{4,3,1,2,5,6,7,8,},},},
{ "=<=<=",{ {1,2,6,4,7,3,5,8,},{4,3,2,1,5,6,7,8,},},},
{ "><=<=",{ {1,2,7,4,6,3,5,8,},{4,3,2,1,5,6,7,8,},},},
{ "<==<=",{ {1,2,3,5,4,7,6,8,},{4,3,1,2,5,6,7,8,},},},
{ "===<=",{ {1,2,3,4,6,5,7,8,},{2,1,3,4,5,6,7,8,},},},
{ ">==<=",{ {1,2,3,7,5,6,4,8,},{3,2,1,4,5,6,7,8,},},},
{ "<>=<=",{ {1,2,3,5,4,7,6,8,},{2,4,1,3,5,6,7,8,},},},
{ "=>=<=",{ {1,2,3,6,4,7,5,8,},{2,4,1,3,5,6,7,8,},},},
{ ">>=<=",{ {1,2,3,7,6,4,5,8,},{2,4,1,3,5,6,7,8,},},},
{ "<<><=",{ {1,2,3,5,4,6,7,8,},{3,2,1,4,5,6,7,8,},},},
{ "=<><=",{ {1,7,3,5,4,6,2,8,},{5,4,3,2,1,6,7,8,},},},
{ "><><=",{ {1,3,6,4,5,7,2,8,},{4,3,2,1,5,6,7,8,},},},
{ "<=><=",{ {1,2,3,7,4,5,6,8,},{3,4,1,2,5,6,7,8,},},},
{ "==><=",{ {1,2,3,7,4,5,6,8,},{2,4,1,3,5,6,7,8,},},},
{ ">=><=",{ {1,3,6,4,5,7,2,8,},{3,2,5,1,4,6,7,8,},},},
{ "<>><=",{ {1,3,2,5,4,7,6,8,},{2,5,7,4,1,3,6,8,},},},
{ "=>><=",{ {1,4,5,2,6,7,3,8,},{2,4,6,1,3,5,7,8,},},},
{ ">>><=",{ {1,4,5,3,6,7,2,8,},{2,4,6,1,3,5,7,8,},},},
{ "<<<==",{ {1,3,5,7,2,4,6,8,},{1,3,5,6,4,7,2,8,},},},
{ "=<<==",{ {1,3,5,7,2,4,6,8,},{1,3,5,6,2,7,4,8,},},},
{ "><<==",{ {1,3,5,7,2,4,6,8,},{1,3,2,5,6,7,4,8,},},},
{ "<=<==",{ {1,2,4,7,3,6,5,8,},{1,3,4,7,5,6,2,8,},},},
{ "==<==",{ {1,2,3,5,7,4,6,8,},{1,2,4,5,6,3,7,8,},},},
{ ">=<==",{ {1,2,3,6,7,4,5,8,},{1,2,4,5,6,3,7,8,},},},
{ "<><==",{ {1,2,3,5,4,7,6,8,},{1,2,3,7,4,5,6,8,},},},
{ "=><==",{ {1,2,3,6,4,7,5,8,},{1,2,3,7,4,5,6,8,},},},
{ ">><==",{ {1,2,3,4,7,6,5,8,},{1,2,3,4,6,5,7,8,},},},
{ "<<===",{ {1,2,3,5,7,4,6,8,},{1,2,3,6,7,5,4,8,},},},
{ "=<===",{ {1,2,3,5,7,4,6,8,},{3,1,4,2,5,6,7,8,},},},
{ "><===",{ {1,2,3,5,7,4,6,8,},{2,1,3,4,5,7,6,8,},},},
{ "<====",{ {1,2,3,4,7,6,5,8,},{4,2,3,1,5,6,7,8,},},},
{ "=====",{ {1,2,3,4,5,6,7,8,},{1,2,3,4,5,6,7,8,},},},
{ ">====",{ {1,2,3,6,4,7,5,8,},{1,2,3,5,4,7,6,8,},},},
{ "<>===",{ {1,2,3,5,4,7,6,8,},{1,2,4,6,3,5,7,8,},},},
{ "=>===",{ {1,2,3,6,4,7,5,8,},{1,2,4,6,3,5,7,8,},},},
{ ">>===",{ {1,2,3,6,7,5,4,8,},{1,2,3,5,7,4,6,8,},},},
{ "<<>==",{ {1,2,3,4,5,7,6,8,},{3,2,1,4,5,6,7,8,},},},
{ "=<>==",{ {1,2,3,7,4,5,6,8,},{1,2,3,6,4,7,5,8,},},},
{ "><>==",{ {1,2,3,7,4,5,6,8,},{1,2,3,5,4,7,6,8,},},},
{ "<=>==",{ {1,2,3,5,4,7,6,8,},{1,2,4,7,3,6,5,8,},},},
{ "==>==",{ {1,2,3,5,6,7,4,8,},{2,4,1,3,5,6,7,8,},},},
{ ">=>==",{ {1,2,5,6,7,4,3,8,},{2,5,4,1,3,6,7,8,},},},
{ "<>>==",{ {1,2,3,7,6,5,4,8,},{5,6,3,4,1,2,7,8,},},},
{ "=>>==",{ {1,3,4,6,7,5,2,8,},{2,5,6,1,3,4,7,8,},},},
{ ">>>==",{ {1,3,4,6,7,5,2,8,},{2,4,6,1,3,5,7,8,},},},
{ "<<<>=",{ {2,4,6,1,3,5,7,8,},{1,4,5,3,6,7,2,8,},},},
{ "=<<>=",{ {2,4,6,1,3,5,7,8,},{1,4,5,2,6,7,3,8,},},},
{ "><<>=",{ {2,4,6,1,3,5,7,8,},{1,3,4,2,6,7,5,8,},},},
{ "<=<>=",{ {2,5,4,1,3,6,7,8,},{2,3,6,4,5,7,1,8,},},},
{ "==<>=",{ {2,4,1,3,5,6,7,8,},{1,2,3,7,4,5,6,8,},},},
{ ">=<>=",{ {2,5,4,1,3,6,7,8,},{1,2,4,3,6,7,5,8,},},},
{ "<><>=",{ {4,3,2,1,5,6,7,8,},{1,3,6,4,5,7,2,8,},},},
{ "=><>=",{ {5,4,2,1,3,6,7,8,},{2,3,6,4,5,7,1,8,},},},
{ ">><>=",{ {3,2,1,4,5,6,7,8,},{1,2,3,5,4,6,7,8,},},},
{ "<<=>=",{ {1,2,3,5,7,4,6,8,},{1,2,5,4,6,7,3,8,},},},
{ "=<=>=",{ {1,2,3,5,7,4,6,8,},{1,2,5,3,6,4,7,8,},},},
{ "><=>=",{ {1,2,3,5,7,4,6,8,},{1,2,4,3,5,7,6,8,},},},
{ "<==>=",{ {1,2,3,4,7,6,5,8,},{1,2,6,4,5,3,7,8,},},},
{ "===>=",{ {1,2,3,4,5,7,6,8,},{1,2,3,5,4,6,7,8,},},},
{ ">==>=",{ {1,2,3,6,7,5,4,8,},{1,2,4,3,5,7,6,8,},},},
{ "<>=>=",{ {4,3,2,1,5,6,7,8,},{1,2,7,4,6,3,5,8,},},},
{ "=>=>=",{ {4,3,2,1,5,6,7,8,},{1,2,6,4,7,3,5,8,},},},
{ ">>=>=",{ {4,3,1,2,5,6,7,8,},{1,2,4,6,3,5,7,8,},},},
{ "<<>>=",{ {1,2,3,4,5,7,6,8,},{1,2,3,6,5,4,7,8,},},},
{ "=<>>=",{ {1,2,3,5,6,7,4,8,},{1,2,3,6,4,7,5,8,},},},
{ "><>>=",{ {1,2,3,5,6,7,4,8,},{1,2,3,5,4,7,6,8,},},},
{ "<=>>=",{ {1,2,3,5,6,7,4,8,},{1,2,5,6,3,4,7,8,},},},
{ "==>>=",{ {1,2,3,5,6,7,4,8,},{1,2,4,6,3,5,7,8,},},},
{ ">=>>=",{ {1,2,5,6,7,4,3,8,},{1,3,5,4,7,2,6,8,},},},
{ "<>>>=",{ {4,3,2,1,5,6,7,8,},{1,6,7,4,5,2,3,8,},},},
{ "=>>>=",{ {6,3,1,2,4,5,7,8,},{1,3,6,7,2,4,5,8,},},},
{ ">>>>=",{ {6,3,1,2,4,5,7,8,},{1,3,5,7,2,4,6,8,},},},
{ "<<<<>",{ {1,3,5,7,2,4,6,8,},{7,3,1,2,4,5,6,8,},},},
{ "=<<<>",{ {1,4,6,7,2,3,5,8,},{7,3,1,2,4,5,6,8,},},},
{ "><<<>",{ {1,5,6,7,2,3,4,8,},{7,3,1,2,4,5,6,8,},},},
{ "<=<<>",{ {1,2,3,5,7,4,6,8,},{5,1,2,3,4,6,7,8,},},},
{ "==<<>",{ {1,2,3,6,7,4,5,8,},{5,1,2,3,4,6,7,8,},},},
{ ">=<<>",{ {1,2,5,4,7,3,6,8,},{2,1,3,4,6,7,5,8,},},},
{ "<><<>",{ {1,2,3,4,7,6,5,8,},{5,1,2,3,4,6,7,8,},},},
{ "=><<>",{ {1,2,3,4,7,6,5,8,},{4,1,2,3,5,6,7,8,},},},
{ ">><<>",{ {1,2,3,4,7,6,5,8,},{3,1,2,4,5,6,7,8,},},},
{ "<<=<>",{ {1,2,4,6,3,5,7,8,},{5,3,1,2,4,6,7,8,},},},
{ "=<=<>",{ {1,2,7,4,6,3,5,8,},{5,3,2,1,4,6,7,8,},},},
{ "><=<>",{ {1,4,7,2,5,6,3,8,},{5,3,2,1,4,6,7,8,},},},
{ "<==<>",{ {1,2,3,4,6,5,7,8,},{3,1,2,4,5,6,7,8,},},},
{ "===<>",{ {1,2,3,7,5,6,4,8,},{4,3,1,2,5,6,7,8,},},},
{ ">==<>",{ {1,2,3,7,5,6,4,8,},{4,2,1,3,5,6,7,8,},},},
{ "<>=<>",{ {1,2,3,5,4,7,6,8,},{2,5,1,3,4,6,7,8,},},},
{ "=>=<>",{ {1,2,3,6,5,4,7,8,},{2,4,1,3,5,6,7,8,},},},
{ ">>=<>",{ {1,2,3,6,5,7,4,8,},{2,4,1,3,5,6,7,8,},},},
{ "<<><>",{ {1,2,3,5,4,6,7,8,},{4,2,1,3,5,6,7,8,},},},
{ "=<><>",{ {1,2,6,4,5,7,3,8,},{4,3,2,1,5,6,7,8,},},},
{ "><><>",{ {1,2,7,4,5,6,3,8,},{4,3,2,1,5,6,7,8,},},},
{ "<=><>",{ {1,2,3,5,4,6,7,8,},{2,4,1,3,5,6,7,8,},},},
{ "==><>",{ {1,2,6,4,5,3,7,8,},{3,2,5,1,4,6,7,8,},},},
{ ">=><>",{ {1,2,6,4,5,7,3,8,},{3,2,5,1,4,6,7,8,},},},
{ "<>><>",{ {1,2,4,3,5,7,6,8,},{2,4,6,1,3,5,7,8,},},},
{ "=>><>",{ {1,2,6,4,5,7,3,8,},{2,4,6,1,3,5,7,8,},},},
{ ">>><>",{ {1,2,7,4,5,6,3,8,},{2,4,6,1,3,5,7,8,},},},
{ "<<<=>",{ {1,3,5,7,2,4,6,8,},{2,3,5,6,1,7,4,8,},},},
{ "=<<=>",{ {1,3,5,7,2,4,6,8,},{2,3,4,6,1,7,5,8,},},},
{ "><<=>",{ {1,3,5,7,2,4,6,8,},{2,3,1,5,6,7,4,8,},},},
{ "<=<=>",{ {1,2,3,5,7,4,6,8,},{1,2,7,3,4,5,6,8,},},},
{ "==<=>",{ {1,2,3,6,7,4,5,8,},{1,2,7,3,4,5,6,8,},},},
{ ">=<=>",{ {1,2,4,7,3,6,5,8,},{1,2,4,5,3,7,6,8,},},},
{ "<><=>",{ {1,2,3,4,7,6,5,8,},{1,2,7,3,4,5,6,8,},},},
{ "=><=>",{ {1,2,3,4,7,6,5,8,},{1,2,4,5,6,3,7,8,},},},
{ ">><=>",{ {1,2,3,4,7,6,5,8,},{1,2,3,4,7,5,6,8,},},},
{ "<<==>",{ {1,2,3,5,7,4,6,8,},{1,2,4,6,7,5,3,8,},},},
{ "=<==>",{ {1,2,3,5,7,4,6,8,},{2,1,3,4,6,7,5,8,},},},
{ "><==>",{ {1,2,3,6,7,4,5,8,},{2,1,3,4,6,7,5,8,},},},
{ "<===>",{ {1,2,3,4,5,7,6,8,},{1,2,3,4,6,7,5,8,},},},
{ "====>",{ {1,2,3,4,7,6,5,8,},{2,1,3,4,6,7,5,8,},},},
{ ">===>",{ {1,2,3,4,7,6,5,8,},{2,1,3,4,5,7,6,8,},},},
{ "<>==>",{ {1,2,3,4,7,6,5,8,},{1,2,3,6,7,4,5,8,},},},
{ "=>==>",{ {1,2,3,4,7,6,5,8,},{1,2,3,5,7,4,6,8,},},},
{ ">>==>",{ {1,2,3,5,7,6,4,8,},{1,2,3,5,7,4,6,8,},},},
{ "<<>=>",{ {1,2,3,4,5,7,6,8,},{4,2,1,3,5,6,7,8,},},},
{ "=<>=>",{ {1,2,3,4,7,5,6,8,},{2,1,3,4,5,7,6,8,},},},
{ "><>=>",{ {1,2,3,7,5,6,4,8,},{2,1,3,4,7,6,5,8,},},},
{ "<=>=>",{ {1,2,3,4,5,7,6,8,},{2,4,1,3,5,6,7,8,},},},
{ "==>=>",{ {1,2,3,6,5,7,4,8,},{2,1,3,5,7,4,6,8,},},},
{ ">=>=>",{ {1,2,3,7,5,6,4,8,},{2,1,3,5,7,4,6,8,},},},
{ "<>>=>",{ {1,2,3,4,7,6,5,8,},{2,4,6,1,3,5,7,8,},},},
{ "=>>=>",{ {1,2,4,6,7,5,3,8,},{2,4,6,1,3,5,7,8,},},},
{ ">>>=>",{ {1,2,5,6,7,4,3,8,},{2,4,6,1,3,5,7,8,},},},
{ "<<<>>",{ {2,4,6,1,3,5,7,8,},{2,4,5,1,6,7,3,8,},},},
{ "=<<>>",{ {2,4,6,1,3,5,7,8,},{2,3,5,1,6,7,4,8,},},},
{ "><<>>",{ {2,4,6,1,3,5,7,8,},{2,3,4,1,6,7,5,8,},},},
{ "<=<>>",{ {2,4,1,3,5,6,7,8,},{2,3,4,5,1,6,7,8,},},},
{ "==<>>",{ {2,5,4,1,3,6,7,8,},{1,4,5,2,6,7,3,8,},},},
{ ">=<>>",{ {2,5,4,1,3,6,7,8,},{1,3,4,2,6,7,5,8,},},},
{ "<><>>",{ {3,2,1,4,5,6,7,8,},{2,3,4,5,1,6,7,8,},},},
{ "=><>>",{ {3,2,1,4,5,6,7,8,},{1,2,3,7,4,5,6,8,},},},
{ ">><>>",{ {3,2,1,4,5,6,7,8,},{1,2,3,6,4,5,7,8,},},},
{ "<<=>>",{ {1,2,3,5,7,4,6,8,},{1,2,5,3,6,7,4,8,},},},
{ "=<=>>",{ {1,2,3,5,7,4,6,8,},{1,2,4,3,6,7,5,8,},},},
{ "><=>>",{ {1,2,3,6,7,4,5,8,},{1,2,4,3,6,7,5,8,},},},
{ "<==>>",{ {1,2,3,4,5,7,6,8,},{1,2,3,6,4,5,7,8,},},},
{ "===>>",{ {1,2,3,4,7,6,5,8,},{1,2,4,3,6,7,5,8,},},},
{ ">==>>",{ {1,2,3,4,7,6,5,8,},{1,2,4,3,5,7,6,8,},},},
{ "<>=>>",{ {3,2,1,4,5,6,7,8,},{1,2,4,7,3,5,6,8,},},},
{ "=>=>>",{ {3,2,1,4,5,6,7,8,},{1,2,4,6,3,5,7,8,},},},
{ ">>=>>",{ {4,2,1,3,5,6,7,8,},{1,2,4,6,3,5,7,8,},},},
{ "<<>>>",{ {1,2,3,4,5,6,7,8,},{1,2,3,4,5,7,6,8,},},},
{ "=<>>>",{ {1,2,3,4,6,7,5,8,},{1,2,3,5,4,7,6,8,},},},
{ "><>>>",{ {1,2,3,5,7,6,4,8,},{1,3,2,5,4,7,6,8,},},},
{ "<=>>>",{ {1,2,3,4,5,7,6,8,},{1,2,4,6,3,5,7,8,},},},
{ "==>>>",{ {1,2,3,5,7,6,4,8,},{1,3,2,5,7,4,6,8,},},},
{ ">=>>>",{ {1,2,3,6,7,5,4,8,},{1,3,2,5,7,4,6,8,},},},
{ "<>>>>",{ {3,2,1,4,5,6,7,8,},{1,3,5,7,2,4,6,8,},},},
{ "=>>>>",{ {5,3,1,2,4,6,7,8,},{1,3,5,7,2,4,6,8,},},},
{ ">>>>>",{ {5,4,1,2,3,6,7,8,},{1,3,5,7,2,4,6,8,},},},
};



int arr[16];
int lis[16];
int n = 7;

inline int sign(int a)
{
	return a > 0 ? 1 : a < 0 ? -1 : 0;
}

struct Entry {
	std::vector<int> v;
	int info[5];
};
std::vector<Entry> ent;

int fa()
{
	int ans = 0;
	for (int i = 0; i < n; ++i) {
		for (int j = i + 1; j < n; ++j) {
			ans += arr[i] > arr[j];
		}
	}
	return ans;
}

int fb()
{
	int ans = 0;
	for (int i = 1; i < n; ++i) {
		if (arr[i] < arr[i - 1])
			++ans;
	}
	return ans;
}

int fc()
{
	int ans = 1;
	lis[0] = 1;
	for (int i = 1; i < n; ++i) {
		lis[i] = 1;
		for (int j = 0; j < i; ++j) {
			if (arr[i] > arr[j])
				lis[i] = std::max(lis[i], lis[j] + 1);
		}
		ans = std::max(ans, lis[i]);
	}
	return ans;
}

int fd()
{
	int ans = 1;
	int bns = 1;
	for (int i = 1; i < n; ++i) {
		if (arr[i] > arr[i - 1])
			++bns;
		else
			bns = 1;
		ans = std::max(ans, bns);
	}
	return ans;
}

int fe()
{
	int ans = 0;
	for (int i = 0; i < n; ++i) {
		if (arr[i] == i + 1)
			++ans;
	}
	return ans;
}

bool found[300];
int ans[300][2];

void findall()
{
	for (int i = 0; i < (int) ent.size(); ++i) {
		for (int j = 0; j < (int) ent.size(); ++j) {
			int a = ent[i].info[0] - ent[j].info[0];
			int b = ent[i].info[1] - ent[j].info[1];
			int c = ent[i].info[2] - ent[j].info[2];
			int d = ent[i].info[3] - ent[j].info[3];
			int e = ent[i].info[4] - ent[j].info[4];
			//if (d == -1 || d == 1)
			//	continue;
			a = sign(a) + 1;
			b = sign(b) + 1;
			c = sign(c) + 1;
			d = sign(d) + 1;
			e = sign(e) + 1;
			int v = a + b * 3 + c * 9 + d * 27 + e * 81;
			if (found[v])
				continue;
			found[v] = true;
			ans[v][0] = i;
			ans[v][1] = j;
		}
	}
}

void print(int id)
{
	auto& v = ent[id].v;
	for (int i = 0; i < (int) v.size(); ++i) {
		std::cout << v[i] << " \n"[i == (int) v.size() - 1];
	}
}

void printcase(int k)
{
	const char s[] = "<=>";
	for (int i = 0; i < 5; ++i) {
		std::cout << s[k % 3];
		k /= 3;
	}
	std::cout << std::endl;
}

void baoli(int k)
{
	if (found[k]) {
		std::cout << "Exists" << std::endl;
		print(ans[k][0]);
		print(ans[k][1]);
	} else {
		std::cout << "Not exists" << std::endl;
	}
}

int q;

void dabiao(const std::string& s)
{
	int M;
	std::cout << "Exists" << std::endl;
	auto& a = map[s].a;
	auto& b = map[s].b;
	std::cout << a[0];
	for (int i = 1; i < 7; ++i) {
		std::cout << ' ' << a[i];
	}
	M = n;
	for (int i = 8; i < n; ++i) {
		std::cout << ' ' << M--;
	}
	std::cout << ' ' << 8 << std::endl;

	std::cout << b[0];
	for (int i = 1; i < 7; ++i) {
		std::cout << ' ' << b[i];
	}
	M = n;
	for (int i = 8; i < n; ++i) {
		std::cout << ' ' << M--;
	}
	std::cout << ' ' << 8 << std::endl;
}

int main()
{
	std::ios::sync_with_stdio(false);
	std::cin >> q >> n;
	std::string s;
	if (n < 8) {
		for (int i = 0; i < n; ++i) {
			arr[i] = i + 1;
		}
		do {
			ent.push_back({std::vector<int>(arr, arr + n), {fa(), fb(), fc(), fd(), fe()}});
		} while (std::next_permutation(arr, arr + n));
		findall();
	}
	for (int i = 0; i < q; ++i) {
		std::cin >> s;
		int k = 0;
		for (int i = 4; i >= 0; --i) {
			char ch = s[i];
			k = k * 3 + (ch == '<' ? 0 : ch == '=' ? 1 : 2);
		}
		if (n < 8)
			baoli(k);
		else
			dabiao(s);
	}
	return 0;
}
