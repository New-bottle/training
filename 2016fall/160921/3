#include <cstdio>
#include <cstring>
#include <queue>

const int N = 100;
int n, m;

int bfs()
{
	if (n == 1)
		return 0;
	std::memset(vis, 0, sizeof(vis));
	std::queue<int> q;
	int g = 0;
	for (int i = 0; i < n; ++i) {
		int b;
		scanf("%d", &b);
		g = (g << 1) | b;
	}
	int t1 = 0;
	int t2 = 0;
	int b = 0;
	for (int i = 0; i < m; ++i) {
		int c;
		scanf("%d", &c);
		for (int j = 0; j < c; ++j) {
			t1 = (t1 << 1) | b;
			t2 = (t2 << 1) | (b ^ 1);
		}
		b ^= 1;
	}
	q.push(t1);
	q.push(t2);
	vis[t1] = 0;
	vis[t2] = 0;
	while (!q.empty()) {
		int v = q.front();
		q.pop();
		if (v == g)
			break;
		for (int i = 0; i < n - 1; ++i) {
			int nv = v;
			int blo = (v >> i) & 1;
		}
	}
}

void work()
{
	int ans = bfs();
	printf("%d\n", ans);
}

int main()
{
	while (~scanf("%d%d", &n, &m)) {
		work();
	}
	return 0;
}
